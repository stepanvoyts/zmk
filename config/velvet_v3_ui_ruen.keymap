#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt { tapping-term-ms = <400>; };

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>;
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };

        layer_off: layer_off {
            compatible = "zmk,behavior-toggle-layer";
            label = "LAYER_OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };

        layer_on: layer_on {
            compatible = "zmk,behavior-toggle-layer";
            label = "LAYER_ON";
            #binding-cells = <1>;
        };

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mod Layer";
            bindings = <&ml>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            require-prior-idle-ms = <20>;
            flavor = "balanced";
        };

        key_on: key_on {
            compatible = "zmk,behavior-key-toggle";
            label = "KEY_ON";
            #binding-cells = <1>;
        };

        key_off: key_off {
            compatible = "zmk,behavior-key-toggle";
            label = "KEY_OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };
    };

    combos {
        compatible = "zmk,combos";

        Lang-En {
            bindings = <&layer_en>;
            key-positions = <2 3>;
            layers = <1>;
        };

        Lang-Ru {
            bindings = <&layer_ru>;
            key-positions = <2 3>;
            layers = <0>;
        };

        l-par {
            bindings = <&kp LPAR>;
            key-positions = <4 5>;
            layers = <0 1>;
        };

        r-par {
            bindings = <&kp RPAR>;
            key-positions = <7 6>;
            layers = <0 1>;
        };

        l-bracket {
            bindings = <&kp LBKT>;
            key-positions = <17 16>;
            layers = <0>;
        };

        r-bracket {
            bindings = <&kp RBKT>;
            key-positions = <19 18>;
            layers = <0>;
        };

        l-brace {
            bindings = <&kp LBRC>;
            key-positions = <28 29>;
            layers = <0>;
        };

        r-brace {
            bindings = <&kp RBRC>;
            key-positions = <31 30>;
            layers = <0>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <3 4>;
            layers = <0>;
        };

        equals-plus {
            bindings = <&kp EQUAL>;
            key-positions = <16 15>;
            layers = <0 1>;
        };

        minus-underscore {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
            layers = <0 1>;
        };

        colon-semi {
            bindings = <&kp SEMI>;
            key-positions = <19 20>;
            layers = <0>;
        };

        grave-tilde {
            bindings = <&kp GRAVE>;
            key-positions = <27 28>;
            layers = <0>;
        };

        s-d-quote {
            bindings = <&kp SQT>;
            key-positions = <31 32>;
            layers = <0>;
        };

        ru-l-bracket {
            bindings = <&en LBKT>;
            key-positions = <17 16>;
            layers = <1>;
        };

        ru-r-bracket {
            bindings = <&en RIGHT_BRACKET>;
            key-positions = <19 18>;
            layers = <1>;
        };

        ru-l-brace {
            bindings = <&en LBRC>;
            key-positions = <28 29>;
            layers = <1>;
        };

        ru-r-brace {
            bindings = <&en RBRC>;
            key-positions = <31 30>;
            layers = <1>;
        };

        ru-slash {
            bindings = <&en SLASH>;
            key-positions = <3 4>;
            layers = <1>;
        };

        ru-colon-semi {
            bindings = <&en SEMI>;
            key-positions = <19 20>;
            layers = <1>;
        };

        ru-grave-tilde {
            bindings = <&en GRAVE>;
            key-positions = <27 28>;
            layers = <1>;
        };

        ru-s-d-quote {
            bindings = <&en SQT>;
            key-positions = <31 32>;
            layers = <1>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 10>,
                <&to_ru>,
                <&macro_wait_time 10>;

            label = "EN";
        };

        ml: ml {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to1 &key_on MACRO_PLACEHOLDER &layer_on 3>,
                <&macro_pause_for_release>,
                <&macro_param_1to1 &key_off MACRO_PLACEHOLDER &layer_off 3>;

            label = "Mod Layer";
            wait-ms = <0>;
            tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        English {
            bindings = <
&kp ESC    &kp B  &kp L  &kp D  &kp W            &kp Z                                             &kp J        &kp F           &kp O  &kp U  &none  &kp BSPC
&kp TAB    &kp N  &kp R  &kp T  &kp S            &kp G                                             &kp Y        &kp H           &kp A  &kp E  &kp I  &kp DOT
&kp LSHFT  &kp Q  &kp X  &kp M  &kp C            &kp V                                             &kp K        &kp P           &none  &none  &none  &kp COMMA
                  &none  &none  &hrml 0xE3 LGUI  &lt 3 SPACE  &hrml 0xE0 LCTRL    &hrml 0xE2 LALT  &lt 5 ENTER  &cap_sen 6 MB1  &none  &none
            >;

            display-name = "en";
        };

        Russian {
            display-name = "ru";
            bindings = <
&trans  &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &mt RU_CYRILLIC_IO RU_CYRILLIC_IE                    &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE                              &mt RU_CYRILLIC_SHCHA RU_CYRILLIC_SHA  &kp RU_CYRILLIC_ZE  &kp RU_CYRILLIC_E    &trans
&trans  &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                                   &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O                                &kp RU_CYRILLIC_EL                     &kp RU_CYRILLIC_DE  &kp RU_CYRILLIC_ZHE  &kp RU_DOT
&trans  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_I                                    &kp RU_CYRILLIC_TE  &mt RU_CYRILLIC_HARD_SIGN RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE                     &kp RU_CYRILLIC_YU  &kp RU_CYRILLIC_HA   &kp RU_COMMA
                                 &trans                &trans              &trans              &lt 4 SPACE                        &trans    &trans  &trans              &trans                                           &trans                                 &trans
            >;
        };

        Shortcuts {
            bindings = <
&trans  &kp B  &kp L   &kp A   &kp W   &kp Z                     &kp J   &kp G   &kp O   &kp U   &trans  &trans
&trans  &kp N  &kp R   &kp T   &kp S   &kp F                     &kp Y   &kp H   &kp D   &kp I   &trans  &trans
&trans  &kp Q  &kp X   &kp M   &kp C   &kp V                     &kp K   &kp P   &trans  &trans  &trans  &trans
               &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        NavigationAndSymbolsEn {
            bindings = <
&trans  &kp N1     &kp N2  &kp N3     &kp N4    &kp N5                              &kp N6    &kp N7    &kp N8     &kp N9     &kp N0     &trans
&trans  &kp ASTRK  &kp AT  &kp QMARK  &kp EXCL  &kp PERCENT                         &kp AMPS  &kp LEFT  &kp UP     &kp DOWN   &kp RIGHT  &kp DELETE
&trans  &kp HASH   &kp LT  &kp CARET  &kp GT    &kp DOLLAR                          &kp NUBS  &kp HOME  &kp PG_UP  &kp PG_DN  &kp END    &kp PSCRN
                   &trans  &trans     &kp LGUI  &trans       &kp LCTRL    &kp LALT  &trans    &trans    &trans     &trans
            >;

            display-name = "nav-symb-en";
            label = "nav-sym-en";
        };

        NavigationAndSymbolsRu {
            label = "nav-sym-ru";
            display-name = "nav-symb-en";
            bindings = <
&trans  &kp N1     &kp N2  &kp N3     &kp N4    &kp N5                        &kp N6    &kp N7    &kp N8     &kp N9     &kp N0     &trans
&trans  &en ASTRK  &en AT  &en QMARK  &kp EXCL  &en PRCNT                     &en AMPS  &kp LEFT  &kp UP     &kp DOWN   &kp RIGHT  &kp DELETE
&trans  &en HASH   &en LT  &en CARET  &en GT    &en DOLLAR                    &en NUBS  &kp HOME  &kp PG_UP  &kp PG_DN  &kp END    &kp PSCRN
                   &trans  &trans     &trans    &trans      &trans    &trans  &trans    &trans    &trans     &trans
            >;
        };

        SystemAndFKeys {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &none                     &none   &none         &none       &none         &bt BT_SEL 0  &bt BT_SEL 1
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &none                     &none   &kp C_VOL_DN  &kp K_MUTE  &kp C_VOL_UP  &bt BT_SEL 2  &bt BT_SEL 3
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none                     &none   &none         &none       &none         &out OUT_TOG  &bt BT_CLR
                &trans   &trans   &trans   &trans  &trans    &trans  &trans  &trans        &trans      &trans
            >;

            display-name = "system-fkeys";
        };

        Mouse {
            bindings = <
&trans  &none  &none     &none     &none     &none                     &none   &none     &none     &none     &none  &trans
&trans  &mo 7  &mkp MB2  &mkp MB3  &mkp MB1  &none                     &none   &mkp MB1  &mkp MB3  &mkp MB2  &mo 7  &none
&trans  &none  &none     &none     &none     &none                     &none   &none     &none     &none     &none  &none
               &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            label = "mouse";
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "mouse-scroll";
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
